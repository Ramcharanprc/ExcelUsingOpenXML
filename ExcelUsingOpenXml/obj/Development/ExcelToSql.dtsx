<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/25/2021 5:00:37 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RAMCHARANPRC"
  DTS:CreatorName="RAMCHARANPRC\Ram charan"
  DTS:DTSID="{E90A6D95-92A0-48CD-8C00-627452E21AAA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.123"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="43"
  DTS:VersionGUID="{0B9FD582-08EB-47AB-B7B1-475429A6DA11}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F81FD41D-CFA5-4ED3-ACA8-FD907C65C234}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FolderPath]+ @[$Project::FileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelPath">
      <DTS:VariableValue
        DTS:DataType="8">E:\Work\Practice\Out1.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{A1E6187D-28D3-410D-9C23-E4812CF43ECD}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_5f5c9e139d3d4d15ac4f6b880523d9d8"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ExcelPath,$Project::ProcName,$Project::ConnectionString,$Project::DllPath,$Project::DllName,$Project::TableName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="WindowsBase" version="4.6.1055.0" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Reflection;
#endregion

namespace ST_5f5c9e139d3d4d15ac4f6b880523d9d8
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }

        public Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            Assembly assembly = null;
            try
            {
                assembly = LoadAssembly(args, assembly);
            }
            catch (Exception exception)
            {
                Dts.Log(exception.ToString(), 0, new byte[0]);
                throw;
            }

            Dts.Log("Exiting CurrentDomain_AssemblyResolve", 0, new byte[0]);
            return assembly;
        }

        private Assembly LoadAssembly(ResolveEventArgs args, Assembly assembly)
        {
            //$Project::DllPath,$Project::DllName
            string DllPath = Dts.Variables["$Project::DllPath"].Value.ToString();
            string DllName = Dts.Variables["$Project::DllName"].Value.ToString();

            string dllFilename = Path.Combine(DllPath, DllName);

            byte[] AssmBytes = File.ReadAllBytes(dllFilename);
            assembly = Assembly.Load(AssmBytes);

            return assembly;
        }
        public void Main()
        {

            string tableName = Dts.Variables["$Project::TableName"].Value.ToString();
            string FolderPath = Dts.Variables["User::ExcelPath"].Value.ToString();
            //string FileName = Dts.Variables["$Project::FileName"].Value.ToString();
            //string ProcName = Dts.Variables["$Project::ProcName"].Value.ToString();
            string ConnnectionString = Dts.Variables["$Project::ConnectionString"].Value.ToString();
            string fullPath = FolderPath /*+ FileName*/;

            DataTable dt = new DataTable();
            List<string> ExcelColumnNames = new List<string>();
            List<string> ExcelFileColumnNames = new List<string>();

            using (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(FolderPath, false))
            {
                Sheet sheet = spreadsheet.WorkbookPart.Workbook.Sheets.GetFirstChild<Sheet>();
                Worksheet worksheet = (spreadsheet.WorkbookPart.GetPartById(sheet.Id.Value) as WorksheetPart).Worksheet;
                IEnumerable<Row> rows = worksheet.GetFirstChild<SheetData>().Descendants<Row>();

                int counter = 1;
                foreach (Row row in rows)
                {
                    if (counter == 1)
                    {
                        foreach (Cell cell in row.Descendants<Cell>())
                        {
                            dt.Columns.Add(GetValue(spreadsheet, cell));
                            ExcelFileColumnNames.Add(GetValue(spreadsheet, cell));
                        }
                        counter = 0;
                    }
                    else
                    {
                        dt.Rows.Add();
                        int cellCounter = 0;
                        foreach (Cell cell in row.Descendants<Cell>())
                        {
                            dt.Rows[dt.Rows.Count - 1][cellCounter] = GetValue(spreadsheet, cell);
                            cellCounter++;
                        }
                    }
                }
            }
            SqlConnection sqlConn = new SqlConnection(ConnnectionString);
            sqlConn.Open();
            string query = "Select * from " + tableName + " where TableName = 'TableCopy'";
            SqlCommand cmd = new SqlCommand(query, sqlConn);


            DataTable tableReferenceForColumnMapping = new DataTable();
            tableReferenceForColumnMapping.Load(cmd.ExecuteReader());
            List<string> TableColumnNamesFromSql = new List<string>();

            foreach (DataRow Row in tableReferenceForColumnMapping.Rows)
            {
                TableColumnNamesFromSql.Add(Row[0].ToString());
                ExcelColumnNames.Add(Row[2].ToString());
            }

            SqlBulkCopy objBulk = new SqlBulkCopy(sqlConn);
            objBulk.DestinationTableName = "TableCopy";
            for (int counter = 0; counter < TableColumnNamesFromSql.Count; counter++)
            {
                if (ExcelColumnNames[counter] == TableColumnNamesFromSql.Find(x => x.Contains(ExcelColumnNames[counter])))
                {
                    objBulk.ColumnMappings.Add(ExcelColumnNames[counter], ExcelColumnNames[counter]);
                }

            }
            /*foreach(var item in ExcelColumnNames)
            {
              if(!item.Equals(ExcelFileColumnNames.Find(x => x.Contains(item)))){
              throw new Exception("Column miss match in Excel file with Metadata Table.");
              }
            }*/
            objBulk.WriteToServer(dt);
            sqlConn.Close();
            Dts.TaskResult = (int)ScriptResults.Success;

        }
        private static string GetValue(SpreadsheetDocument spreadsheet, Cell cell)
        {
            string Value = cell.CellValue.InnerText;
            if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
            {
                return spreadsheet.WorkbookPart.SharedStringTablePart.SharedStringTable.ChildElements.GetItem
                    (int.Parse(Value)).InnerText;
            }
            return Value;
        }
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5f5c9e139d3d4d15ac4f6b880523d9d8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5f5c9e139d3d4d15ac4f6b880523d9d8</msb:DisplayName>
    <msb:ProjectId>{E4D53B2E-937D-42F9-B4EE-64B148D23791}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Settings.get_Default():ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Sett" +
    "ings")]

namespace ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9848EADB-BD78-4FA8-9AB5-3076483090D8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5f5c9e139d3d4d15ac4f6b880523d9d8</RootNamespace>
    <AssemblyName>ST_5f5c9e139d3d4d15ac4f6b880523d9d8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="DocumentFormat.OpenXml">
      <HintPath>C:\Users\Ram charan\.nuget\packages\documentformat.openxml\2.12.1\lib\net40\DocumentFormat.OpenXml.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\Ram charan\AppData\Local\Temp\Vsta\SSIS_ST150\Vstanj7Kk6rNZUSfynnHLW434Q\packages\WindowsBase.4.6.1055.0\lib\WindowsBase.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5f5c9e139d3d4d15ac4f6b880523d9d8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5f5c9e139d3d4d15ac4f6b880523d9d8")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5f5c9e139d3d4d15ac4f6b880523d9d8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_5f5c9e139d3d4d15ac4f6b880523d9d8.dll">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
AAAKCgNvTwAACiw0A29PAAAKb1AAAAoZMyYCbyAAAApvUQAACm9SAAAKb1MAAAoGKFQAAApvVQAA
Cm9OAAAKKgYqHgIoVgAACiqufgEAAAQtHnKDAQBw0AMAAAIoVwAACm9YAAAKc1kAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAihaAAAKKi5zCwAABoADAAAEKmIDAnsHAAAEAnsI
AAAEb0MAAApvWwAACioAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABsBwAA
I34AANgHAAAMCwAAI1N0cmluZ3MAAAAA5BIAAPgBAAAjVVMA3BQAABAAAAAjR1VJRAAAAOwUAAB4
AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAWAAABAAAAUgAAAAYAAAAJAAAADgAAAAgA
AABbAAAAAgAAABEAAAADAAAAAgAAAAMAAAAEAAAACAAAAAEAAAAGAAAAAQAAAAIAAAAFAAAAAADG
BQEAAAAAAAYAzAP+BwYAWwT+BwYAGAPrBw8AcggAAAYARQOiBgYArwOiBgYAkAOiBgYAQgSiBgYA
7AOiBgYABQSiBgYAXAOiBgYAdwMEBQoAIAR1BQoAaAJ1BQYA3AqiBgYAmAkpBgYAAwkpBgYAGQcp
Bg4AgwH/AAYAlAAeAQ4ACwf9CQ4AYwH9CQ4A7gr9CRIAIgrjBBIAnwmlCQYAhgAeARIAvwqlCRIA
7gWlCQYAxAcuCQ4Auwr/AAYArAEpBgYAWQApBgYAMAYpBgYA4AL+BwYA+wLrBwYAdQceCAYANgeN
BhYAywKwBRYALAOwBRYAnwJ4BgYAUQYpBgYAhQcpBgoAngV1BQYAeQQpBhoAtAj6ARoAowH6AQYA
RAXOAAYA3AHOABIAagrjBBIATQWlCRIAVQmlCRIAEwr4BRIAiAT4BRIAKAD4BRIAmQfjBBIAdwrj
BBIAgwrjBBIA2AmlCRIACwGlCQYASwAeAQ4A1wb/AA4AbQb/AA4A7Ab/AAYAxQopBg4AhAL/AA4A
/gYjBwYAOQUpBg4ATgf9CQ4AQgf/AA4AtAb9CQ4AHgX9CRIALwKlCRIAmASlCRIAegD4BRIA3Ail
CRIAZQD4BRIAUArjBBIAkQGlCRIAkQr4BQYAmwApBgYAMwIpBgYAuAEpBgAAAADFAAAAAAABAAEA
AQAQAEYGoQA5AAEAAQAAABAAJQiBCEEAAQAGAAABEAD6CIEIoQADAAoAAwEAAFwJAACFAAQADQAD
ARAAAQAAAEEABwANABEANQZNAhEAWAJSAhEAcwFXAgYG9wBbAlaAQQleAlaAOAJeAgYAvghiAgYA
rgdbAgYAFgBpAlAgAAAAAIYY3gcGAAEAcCAAAAAAhgDFBHECAQDQIAAAAACBANgKeQIDADAhAAAA
AIYATAYGAAUADCUAAAAAkQCiBIICBQBiJQAAAACDGN4HBgAHAGolAAAAAJMIcQeKAgcAliUAAAAA
kwhAApACBwCdJQAAAACTCEwClgIHAKUlAAAAAJYI4gmdAggArCUAAAAAhhjeBwYACAC0JQAAAACR
GOQHogIIAGIlAAAAAIYY3gcGAAgAwCUAAAAAgwAdACMCCAAAAAEAagcAAAIAFAkAAAEAFAkAAAIA
5QoAAAEAyAkAAAIA8wUAAAEAqwQAAAEAwwoJAN4HAQARAN4HBgAZAN4HCgApAN4HEAAxAN4HEAA5
AN4HEABBAN4HEABJAN4HEABRAN4HEABZAN4HEABhAN4HEABpAN4HBgARAd4HBgAZAd4HBgA5Ad4H
FQBxAN4HBgBJAVsGHABRAd4HIgBJAbEEKABxAEkJNgCBADcFPABZAUAFQABZAbAITABpAQ8GUgBx
AX4EWQB5ARoCXQCBAc8IYwB5AEwBaQCZAN4HBgAMAN4HBgDBAEEGtADBAGYKuwCJAUkFwQCRAVEJ
xwChAVUBzQDJADkB2AAUAH4E5QC5AUAB6gDJAdQJ8QChAWoJ/QAcANAHFQEkADYK5QAsANAHFQE0
ADYK5QCZACIJOQHpAVEBPwEMAFEBRgHpAKQKTAH5AL0CBgCZAIgJUAEBAgYLVgH5AVEBYQEJAkIK
aAH5AQ8GbAHxABgGcgGpAN4HEAARAkEGBgAZApEJeAGxAN4HfwGxAFwHhgGZAEwBjAEJAtAHkwHp
ADYKWQDxAA8GmAG5AN4HnQG5AOEBEAAMAA8GowE8AN4HIgAMAG4BsAEZAvoKvAG5AOcIwgExAlEB
yAEMAEIKaAG5ALYH0AERArcCBgBZAe4JAQBBApQE1gGhAa0KPABBAiIC3AFEAH4E5QCJAUwK8AFp
Ao0B9gGhAXYJ/AGBAsUCAgJ5AiEGBwKBAN4HBgCJAsoBDgKJAssKFwIhAd4HHAJBAd4HBgAZAhkJ
IwIIABQAQwIIABgASAIpAHsA3wIuAAsAtwIuABMAwAIuABsA3wIuACMA6AIuACsAEQMuADMAEQMu
ADsAEQMuAEMA6AIuAEsAFwMuAFMAEQMuAFsALgNDAGMASAJJAHsA3wJhAGsASAJjAHMASALDAGsA
SAIvAEgAcAADAAEABAADAAAAdQemAgAAYAKsAgAA5gmyAgIABwADAAIACAAFAAEACQAFAAIACgAH
AK4A3gANAR4BKgEyAakB5wEEgAAAAQAAABgeKpgAAAAAAAChAAAABAAAAAAAAAAAAAAAKAIVAQAA
AAAPAAAAAAAAAAAAAAAxAlYFAAAAAAQAAAAAAAAAAAAAACgC/wAAAAAAAgAMAAEAAAAAAAAAOgL4
BQAAAAAEAAAAAAAAAAAAAAAoAikGAAAAAA8AAAAAAAAAAAAAADEC2AAAAAAAAAAAAAEAAAAvCAAA
BQACAAYAAgBHANMARwD3AFEACAFRACUBZwBdAQAAADw+Y19fRGlzcGxheUNsYXNzM18wADw+OV9f
MAA8TWFpbj5iX18wAE9wZW5YbWxDb21wYXJhYmxlU2ltcGxlUmVmZXJlbmNlYDEASUVudW1lcmFi
bGVgMQBQcmVkaWNhdGVgMQBPcGVuWG1sU2ltcGxlVmFsdWVgMQBFbnVtVmFsdWVgMQBJRW51bWVy
YXRvcmAxAExpc3RgMQBJbnQzMgBTVF81ZjVjOWUxMzlkM2Q0ZDE1YWM0ZjZiODgwNTIzZDlkOAA8
TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18A
U3lzdGVtLkRhdGEAU2hlZXREYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmlj
AGdldF9JZABHZXRQYXJ0QnlJZABMb2FkAEFkZABHZXRGaXJzdENoaWxkAFNxbENvbW1hbmQARmlu
ZABkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxlAGdldF9TaGFyZWRTdHJpbmdUYWJsZQBWYXJpYWJs
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAHNl
dF9EZXN0aW5hdGlvblRhYmxlTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENv
bWJpbmUAZ2V0X0RhdGFUeXBlAENlbGxUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1
cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERh
dGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAFBh
cnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVn
Z2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1
dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBCeXRlAGdldF9WYWx1ZQBTdHJpbmdW
YWx1ZQBnZXRfQ2VsbFZhbHVlAEdldFZhbHVlAHZhbHVlAGFkZF9Bc3NlbWJseVJlc29sdmUAQ3Vy
cmVudERvbWFpbl9Bc3NlbWJseVJlc29sdmUARG9jdW1lbnRGb3JtYXQuT3BlblhtbC5QYWNrYWdp
bmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTcWxCdWxrQ29weUNvbHVtbk1hcHBpbmcAVG9T
dHJpbmcATG9nAFBhdGgAZ2V0X1dvcmtib29rAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFz
awBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1v
ZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF81ZjVjOWUxMzlkM2Q0ZDE1YWM0ZjZiODgwNTIz
ZDlkOC5kbGwAQ2VsbABjZWxsAERvY3VtZW50Rm9ybWF0Lk9wZW5YbWwAZ2V0X0l0ZW0Ac2V0X0l0
ZW0AR2V0SXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AQXBwRG9t
YWluAGdldF9DdXJyZW50RG9tYWluAERhdGFDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AU3FsQnVsa0NvcHlDb2x1bW5NYXBw
aW5nQ29sbGVjdGlvbgBEYXRhQ29sdW1uQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBEYkNv
bm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1
cmVJbmZvAElEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBzZW5kZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBSZXNvbHZlRXZlbnRIYW5kbGVyAE9wZW5YbWxQYXJ0Q29udGFpbmVy
AGNvdW50ZXIAV3JpdGVUb1NlcnZlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzVmNWM5ZTEzOWQzZDRkMTVhYzRmNmI4ODA1MjNkOWQ4LlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF81ZjVjOWUxMzlkM2Q0
ZDE1YWM0ZjZiODgwNTIzZDlkOC5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMARXhjZWxDb2x1bW5O
YW1lcwBSZWFkQWxsQnl0ZXMAQ2VsbFZhbHVlcwBnZXRfQ29sdW1uTWFwcGluZ3MAU2V0dGluZ3MA
UmVzb2x2ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0
aW9ucwBTdWNjZXNzAGdldF9EdHMAZ2V0X1NoZWV0cwBTY3JpcHRSZXN1bHRzAERlc2NlbmRhbnRz
AGdldF9DaGlsZEVsZW1lbnRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAU2hlZXQARG9jdW1lbnRG
b3JtYXQuT3BlblhtbC5TcHJlYWRzaGVldABzcHJlYWRzaGVldABnZXRfV29ya3NoZWV0AGdldF9E
ZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABPcGVuWG1sRWxlbWVu
dABTcHJlYWRzaGVldERvY3VtZW50AGdldF9DdXJyZW50AGdldF9Db3VudABnZXRfU2hhcmVkU3Ry
aW5nVGFibGVQYXJ0AGdldF9Xb3JrYm9va1BhcnQAT3BlblhtbFBhcnQAV29ya3NoZWV0UGFydABP
cGVuWG1sRWxlbWVudExpc3QATW92ZU5leHQAZ2V0X0lubmVyVGV4dABEYXRhUm93AHgAQXJyYXkA
Z2V0X0Fzc2VtYmx5AExvYWRBc3NlbWJseQBhc3NlbWJseQBTcWxCdWxrQ29weQBvcF9FcXVhbGl0
eQBFbXB0eQAAS0UAeABpAHQAaQBuAGcAIABDAHUAcgByAGUAbgB0AEQAbwBtAGEAaQBuAF8AQQBz
AHMAZQBtAGIAbAB5AFIAZQBzAG8AbAB2AGUAACMkAFAAcgBvAGoAZQBjAHQAOgA6AEQAbABsAFAA
YQB0AGgAACMkAFAAcgBvAGoAZQBjAHQAOgA6AEQAbABsAE4AYQBtAGUAACckAFAAcgBvAGoAZQBj
AHQAOgA6AFQAYQBiAGwAZQBOAGEAbQBlAAAfVQBzAGUAcgA6ADoARQB4AGMAZQBsAFAAYQB0AGgA
ADUkAFAAcgBvAGoAZQBjAHQAOgA6AEMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAAB1T
AGUAbABlAGMAdAAgACoAIABmAHIAbwBtACAAAD0gAHcAaABlAHIAZQAgAFQAYQBiAGwAZQBOAGEA
bQBlACAAPQAgACcAVABhAGIAbABlAEMAbwBwAHkAJwABE1QAYQBiAGwAZQBDAG8AcAB5AABxUwBU
AF8ANQBmADUAYwA5AGUAMQAzADkAZAAzAGQANABkADEANQBhAGMANABmADYAYgA4ADgAMAA1ADIA
MwBkADkAZAA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABt
n3LNaM8zR7vC8mnupnDqAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAmQUAABKApQUgAgEcGAYg
AQESgKkGBwISPRJJBSAAEoCtAyAADgcgAwEOCB0FAwcBDgUgABKAtQYgARKAuRwDIAAcBQACDg4O
BQABHQUOBgABEj0dBT0HFxIYDg4STRUSUQEOElUSWRUSUQEOEl0SYRJlCBUSaQESbRJtFRJpARJx
EnEIEnESdRJ5En0VEoCBAQ4IBRUSUQEOBgACEmEOAgUgABKAxQUgABKAyQUgABKAzQUwAQAeAAQK
ARJlBSAAEoDVBhUSgNkBDgQgABMABiABEoDhDgUgABKA6QUKARKA7QowAQAVEoDxAR4ABAoBEm0H
FRKA8QESbQggABUSaQETAAYVEmkBEm0ECgEScQcVEoDxARJxBhUSaQEScQUgABKA9QYgARKA+Q4F
IAEBEwADIAACBSAAEoD9BhABAB0eAAMKARwGIAESeR0cAyAACAUgARJ5CAUgAgEIHAYAAw4ODg4G
IAIBDhJVBSAAEoERBiABARKBFQQgABJ1BCABHAgFIAEBElUFIAETAAgGFRKAgQEOCyABEwAVEoCB
ARMABQACAg4OBSAAEoEZByACEoEdDg4FIAEBEk0FIAASgSUKIAAVEoEpARGBLQgVEoExARGBLQUg
ABKBNQUgABKBOQUgABKBPQQAAQgOBiABEoDRCAgAARKBRRGBSQQgABI9BiACAQ4SPQQgAQIOCLd6
XFYZNOCJCImEXc2AgMyRCI+wbLZNAZoXBAAAAAAEAQAAAAQGEoCRBAYSgJUDBhIQAgYIAwYRFAYG
FRJRAQ4HBhUSgIEBDgcgAhI9HBJFCCACEj0SRRI9BwACDhJhEnEFAAASgJEFAAASgJUGAAEBEoCV
BAAAEhADAAABBQgAEoCRBQgAEoCVBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVmNWM5ZTEzOWQzZDRkMTVhYzRmNmI4ODA1MjNkOWQ4
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjEAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAACA/AAAAAAAAAAAAADo/AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsPwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAKpgYHgAAAQAqmBgePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA1AGYANQBjADkAZQAxADMAOQBkADMAZAA0AGQAMQA1AGEAYwA0AGYANgBiADgAOAAwADUAMgAz
AGQAOQBkADgAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADAA
NAAuADMAOAA5ADUANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1
AGYANQBjADkAZQAxADMAOQBkADMAZAA0AGQAMQA1AGEAYwA0AGYANgBiADgAOAAwADUAMgAzAGQA
OQBkADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADUAZgA1AGMAOQBlADEAMwA5AGQAMwBkADQAZAAxADUAYQBjADQAZgA2AGIAOAA4ADAA
NQAyADMAZAA5AGQAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwA1AGYANQBjADkAZQAxADMAOQBkADMAZAA0AGQAMQA1AGEAYwA0AGYANgBiADgAOAAwADUA
MgAzAGQAOQBkADgAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcANwAwADQALgAzADgAOQA1ADQAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcANwAwADQALgAzADgAOQA1ADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAATD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="214,111" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>