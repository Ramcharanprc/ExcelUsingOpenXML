<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/19/2021 6:14:54 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="RAMCHARANPRC"
  DTS:CreatorName="RAMCHARANPRC\Ram charan"
  DTS:DTSID="{0FE633AB-383A-4124-8786-F751A08AEF2E}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.123"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="20"
  DTS:VersionGUID="{54D4DAB1-549F-4838-A430-927DF885E3BC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{9A4A5ED0-2183-4655-A018-76F29B283BD8}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9745e0c6d25e435888e9502a2f499bb1"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Project::ProcName,$Project::FolderPath,$Project::FileName,$Project::ConnectionString,$Project::DllPath,$Project::DllName">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="WindowsBase" version="4.6.1055.0" targetFramework="net47" />		
	
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Settings.get_Default():ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Sett" +
    "ings")]

namespace ST_9745e0c6d25e435888e9502a2f499bb1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Collections.Generic;
using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System.Reflection;
using System.IO;
using System.Security.Policy;
using System.Security;
#endregion

namespace ST_9745e0c6d25e435888e9502a2f499bb1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        
        public ScriptMain()
        {
            AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(CurrentDomain_AssemblyResolve);
        }

        public Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
        {
            Assembly assembly = null;
            try
            {
                assembly = LoadAssembly(args, assembly);
            }
            catch (Exception exception)
            {
                Dts.Log(exception.ToString(), 0, new byte[0]);
                throw;
            }

            Dts.Log("Exiting CurrentDomain_AssemblyResolve", 0, new byte[0]);
            return assembly;
        }

        private Assembly LoadAssembly(ResolveEventArgs args, Assembly assembly)
        {
            //$Project::DllPath,$Project::DllName
            string DllPath= Dts.Variables["$Project::DllPath"].Value.ToString();
            string DllName= Dts.Variables["$Project::DllName"].Value.ToString();

            string dllFilename = Path.Combine(DllPath, DllName);

            byte[] AssmBytes = File.ReadAllBytes(dllFilename);
            assembly = Assembly.Load(AssmBytes);

            return assembly;
        }
        public void Main()
            {

                string FolderPath = Dts.Variables["$Project::FolderPath"].Value.ToString();
                string FileName = Dts.Variables["$Project::FileName"].Value.ToString();
                string ProcName = Dts.Variables["$Project::ProcName"].Value.ToString();
                string ConnnectionString = Dts.Variables["$Project::ConnectionString"].Value.ToString();
                string fullPath = FolderPath + FileName;

                using (SpreadsheetDocument document = SpreadsheetDocument.Create(fullPath, SpreadsheetDocumentType.Workbook))
                {
                    /*Connection String for Windows Authentication: "Data Source=localhost;Initial Catalog=School;Integrated Security=True;"
                       Connection String for SQL Server Authentication: "Server = NA01-UATDB01.np.newpark.corp; DATABASE = NewparkCentral; USER ID = portaldb; PASSWORD = qepVy@yZ^"*/

                    SqlConnection sqlConn = new SqlConnection(ConnnectionString);
                    sqlConn.Open();
                    SqlCommand cmd = new SqlCommand(ProcName, sqlConn);
                    cmd.CommandType = CommandType.StoredProcedure;

                    DataTable dt = new DataTable();
                    dt.Load(cmd.ExecuteReader());
                    sqlConn.Close();
                    List<string> header = new List<string>();
                    foreach (DataColumn column in dt.Columns)
                    {
                        header.Add(column.ColumnName);
                    }

                    WorkbookPart workbookPart = document.AddWorkbookPart();
                    workbookPart.Workbook = new Workbook();

                    WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();
                    var sheetData = new SheetData();
                    worksheetPart.Worksheet = new Worksheet(sheetData);

                    Sheets sheets = workbookPart.Workbook.AppendChild(new Sheets());
                    Sheet sheet = new Sheet() { Id = workbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = "Sheet1" };

                    sheets.Append(sheet);

                    Row headerRow = new Row();

                    foreach (var item in header)
                    {
                        Cell cell = new Cell();
                        cell.DataType = CellValues.String;
                        cell.CellValue = new CellValue(item);
                        headerRow.AppendChild(cell);
                    }

                    sheetData.AppendChild(headerRow);

                    foreach (DataRow dsrow in dt.Rows)
                    {
                        Row newRow = new Row();
                        foreach (String col in header)
                        {
                            Cell cell = new Cell();
                            cell.DataType = CellValues.String;
                            cell.CellValue = new CellValue(dsrow[col].ToString());
                            newRow.AppendChild(cell);
                        }

                        sheetData.AppendChild(newRow);
                    }

                    workbookPart.Workbook.Save();
                }
                Dts.TaskResult = (int)ScriptResults.Success;
            }

            #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
            enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_9745e0c6d25e435888e9502a2f499bb1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{14536EE0-76E3-4C0B-9253-D804043F49B1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9745e0c6d25e435888e9502a2f499bb1</RootNamespace>
    <AssemblyName>ST_9745e0c6d25e435888e9502a2f499bb1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="DocumentFormat.OpenXml">
      <HintPath>E:\Work\Practice\Packages\documentformat.openxml\2.12.1\lib\net40\DocumentFormat.OpenXml.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\Ram charan\AppData\Local\Temp\Vsta\SSIS_ST150\Vstav__mJrm__1Xk2z5K8HRD88QQ\packages\WindowsBase.4.6.1055.0\lib\WindowsBase.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9745e0c6d25e435888e9502a2f499bb1</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9745e0c6d25e435888e9502a2f499bb1</msb:DisplayName>
    <msb:ProjectId>{D2FD8D6C-5018-4AEF-8080-24C2F8EDA8E0}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9745e0c6d25e435888e9502a2f499bb1.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="3d72793f3698489aaacad0667fa5dbfb">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>24</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>80</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9745e0c6d25e435888e9502a2f499bb1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9745e0c6d25e435888e9502a2f499bb1")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9745e0c6d25e435888e9502a2f499bb1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9745e0c6d25e435888e9502a2f499bb1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9745e0c6d25e435888e9502a2f499bb1.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMAtFGAAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAkjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEA7AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
OwAAAAAAAEgAAAACAAUAECUAAHgVAAABAAAAAAAAAIg6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHYCKBAAAAooEQAACgL+BgIAAAZzEgAACm8TAAAKKgAAGzAE
AEEAAAABAAARFAoCBAYoAwAABgreGwsCKBQAAAoHbxUAAAoWFo0uAAABbxYAAAr+GgIoFAAACnIB
AABwFhaNLgAAAW8WAAAKBioAAAABEAAAAAACAAsNABsSAAABEzADAFMAAAACAAARAigUAAAKbxcA
AApyTQAAcG8YAAAKbxkAAApvFQAACgIoFAAACm8XAAAKcnEAAHBvGAAACm8ZAAAKbxUAAAoKBiga
AAAKKBsAAAooHAAAChACBCoAGzAFAPgCAAADAAARAigUAAAKbxcAAApylQAAcG8YAAAKbxkAAApv
FQAACgIoFAAACm8XAAAKcr8AAHBvGAAACm8ZAAAKbxUAAAoKAigUAAAKbxcAAApy5QAAcG8YAAAK
bxkAAApvFQAACgsCKBQAAApvFwAACnILAQBwbxgAAApvGQAACm8VAAAKDAYoHQAAChYoHgAACg0I
cx8AAAoTBBEEbyAAAAoHEQRzIQAAChMFEQUabyIAAApzIwAAChMGEQYRBW8kAAAKbyUAAAoRBG8m
AAAKcycAAAoTBxEGbygAAApvKQAAChMNKxwRDW8qAAAKdB4AAAETDhEHEQ5vKwAACm8sAAAKEQ1v
LQAACi3b3hURDXUfAAABEw8RDywHEQ9vLgAACtwJby8AAAoTCBEIczAAAApvMQAAChEIbwEAACsT
CXMzAAAKEwoRCReNPgAAASUWEQqiczQAAApvNQAAChEIbzYAAApzNwAACm8CAAArczkAAAolEQgR
CW86AAAKKDsAAApvPAAACiUXKD0AAApvPgAACiVyQQEAcCg7AAAKbz8AAAoTCxeNPgAAASUWEQui
b0AAAApzQQAAChMMEQdvQgAAChMQKzUSEChDAAAKExFzRAAAChMSERIaKEUAAApvRgAAChESERFz
RwAACm9IAAAKEQwREm8DAAArJhIQKEkAAAotwt4OEhD+FgIAABtvLgAACtwRChEMbwQAACsmEQZv
SgAACm8pAAAKEw04hAAAABENbyoAAAp0IgAAARMTc0EAAAoTFBEHb0IAAAoTECtBEhAoQwAAChMV
c0QAAAoTFhEWGihFAAAKb0YAAAoRFhETERVvSwAACm8VAAAKc0cAAApvSAAAChEUERZvAwAAKyYS
EChJAAAKLbbeDhIQ/hYCAAAbby4AAArcEQoRFG8EAAArJhENby0AAAo6cP///94VEQ11HwAAARMP
EQ8sBxEPby4AAArcEQhvNgAACm9MAAAK3goJLAYJby4AAArcAigUAAAKFm9NAAAKKkF8AAACAAAA
3gAAACkAAAAHAQAAFQAAAAAAAAACAAAAvwEAAEIAAAABAgAADgAAAAAAAAACAAAASgIAAE4AAACY
AgAADgAAAAAAAAACAAAAJwIAAJcAAAC+AgAAFQAAAAAAAAACAAAAjAAAAFUCAADhAgAACgAAAAAA
AAAeAihOAAAKKq5+AQAABC0eck8BAHDQAwAAAihPAAAKb1AAAApzUQAACoABAAAEfgEAAAQqGn4C
AAAEKh4CgAIAAAQqGn4DAAAEKh4CKFIAAAoqLnMKAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAA
djQuMC4zMDMxOQAAAAAFAGwAAACYBgAAI34AAAQHAAC8CQAAI1N0cmluZ3MAAAAAwBAAAMQBAAAj
VVMAhBIAABAAAAAjR1VJRAAAAJQSAADkAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPoBMwAW
AAABAAAASwAAAAUAAAAGAAAACwAAAAUAAABSAAAAAgAAABAAAAADAAAAAgAAAAMAAAAEAAAAAwAA
AAEAAAAGAAAAAQAAAAEAAAAEAAAAAABRBQEAAAAAAAYAWwM6BwYA6gM6BwYApwInBw8ArgcAAAYA
1AIXBgYAPgMXBgYAHwMXBgYA0QMXBgYAewMXBgYAlAMXBgYA6wIXBgYABgObBAoArwMABQoA9gEA
BQYAqQkXBgYAhQieBQYAGwieBQYAawaeBQ4AJgl6BBIAXQbqCBIA3gDqCBIAAAFyAAYADQCRAA4A
VQl6BA4Abgl6BA4AfgCSCA4AjAiSCA4AlAmSCAYAAAc9CBIA4gVyAAYAEwGeBV8ADwcAAA4AeQWS
CBIAkAlyAAYApQWeBQYAigInBwYAxwZaBwYAiAYCBhYAWgI7BRYAuwI7BRYALQLtBQYAbwI6BwYA
xgWeBQYA1waeBQoAKQUABQYACASeBRoA8AdgARoACgFgAQYAwgRBAAYAQwFBAAYAtwSeBQ4ArgF+
BRIAUAZ1BhIA1AB1BhIAmQFyABIAoAbqCBIAlAZyABIAKQZyABIAEgJyAA4A2ASSCA4A6wZ6BA4A
AAl+BQ4AuQiSCA4AYAiSCA4AYgl6BA4AIwR+BQ4ADQR+BQ4AAQB+BQ4ABwiSCA4ApQGSCA4AMwSS
CBIAPgZyAA4ADwl+BQYAwQGeBQYAHwGeBQAAAAA4AAAAAAABAAEAAQAQALsFFAA5AAEAAQAAABAA
YQe9B0EAAQAFAAABEAASCL0HpQADAAkAAwEAAGcIAACNAAQADAARAKoF0AERAOYB1QERAPAA2gEG
BmoA3gFWgFAI4QFWgMYB4QFQIAAAAACGGBoHBgABAHAgAAAAAIYAXATlAQEA0CAAAAAAgQClCe0B
AwAwIQAAAACGAMEFBgAFALAkAAAAAIMYGgcGAAUAuCQAAAAAkwjDBvYBBQDkJAAAAACTCM4B/AEF
AOskAAAAAJMI2gECAgUA8yQAAAAAlgjPCAkCBgD6JAAAAACGGBoHBgAGAAIlAAAAAJEYIAcOAgYA
AAABALwGAAACACwIAAABACwIAAACALIJAAABAD0ECQAaBwEAEQAaBwYAGQAaBwoAKQAaBxAAMQAa
BxAAOQAaBxAAQQAaBxAASQAaBxAAUQAaBxAAWQAaBxAAYQAaBxAAaQAaBwYAIQEaBwYAQQEaBxUA
UQEaBwYAcQAaBwYAWQHQBRwAYQEaByIAWQFIBCgAcQBYCDYAgQC1BDwAaQG+BEAAaQHsB0wAeQGV
BVIAgQEZBFkAiQGAAV0AkQH6B2MAeQC/AGkAmQF+CF0AmQBTAqYAoQAaBxAAqQG2BQYAqQAaB68A
sQGVAbYAsQAaBwYAqQCuBr0AsQC/AMMAqQFFAgYADAAaBwYAsQAxCNAA2QEMB9YA6QA6CVkA8QBR
ATwADADEANsA6QCHCeEA+QBLAgYAmQBSCeUA4QEaBwYAwQDUBOoA6QF8CfEA0QAaBwYA+QEaB/wA
yQC1CAQBwQDHBAsBAQIaBwYA8QHIABEB2QAaBwYA6QFGCR8BEQLDCCYB2QCsAC0BGQLDCDQB2QCz
ADsB2QBIAS0B8QHpAPwA4QAaBwYADAAMB0IBFAA6CVMBCQEaBwYAHADDCGEBMQKIAW0BOQIaBxAA
MQIvBHkBFACHCeEAsQB1CIsBEQGVBZEBSQJDBAYAaQHbCAEAgQAaBwYAUQIxAZYBUQKYCZ8BKQEa
B6QBSQEaBwYACAAUAMYBCAAYAMsBKQBzAEsCLgALACMCLgATACwCLgAbAEsCLgAjAFQCLgArAH0C
LgAzAH0CLgA7AH0CLgBDAFQCLgBLAIMCLgBTAH0CLgBbAJoCQwBjAMsBSQBzAEsCYQB7AMsBYwBr
AMsBLwBIAHAAAwABAAQAAwAAAMcGEgIAAO4BGAIAANMIHgICAAYAAwACAAcABQABAAgABQACAAkA
BwDKAEwBWAEEgAAAAQAAABMejJUAAAAAAAAUAAAABAAAAAAAAAAAAAAAqwGIAAAAAAAPAAAAAAAA
AAAAAAC0AeEEAAAAAAIADAABAAAAAAAAAL0BfgUAAAAABAAAAAAAAAAAAAAAqwFyAAAAAAAEAAAA
AAAAAAAAAACrAZ4FAAAAAA8AAAAAAAAAAAAAALQBSwAAAAAAAAAAAAEAAABrBwAABQACAGUA9wBx
ABkBcQCAAXEAhgEAAABFbnVtVmFsdWVgMQBMaXN0YDEAU1RfOTc0NWUwYzZkMjVlNDM1ODg4ZTk1
MDJhMmY0OTliYjEAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAFNoZWV0RGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBzZXRfSWQAc2V0X1NoZWV0SWQATG9hZABBZGQAQXBwZW5kQ2hpbGQARGJD
b21tYW5kAFNxbENvbW1hbmQAQXBwZW5kAGRlZmF1bHRJbnN0YW5jZQBEYXRhVGFibGUAVmFyaWFi
bGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBz
ZXRfTmFtZQBnZXRfQ29sdW1uTmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAENv
bWJpbmUAc2V0X0RhdGFUeXBlAHNldF9Db21tYW5kVHlwZQBDZWxsVHlwZQBTcHJlYWRzaGVldERv
Y3VtZW50VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVy
ZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBDcmVhdGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAEJ5dGUAVUludDMyVmFsdWUAZ2V0X1ZhbHVlAFN0cmluZ1ZhbHVl
AHNldF9DZWxsVmFsdWUAdmFsdWUAU2F2ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1cnJlbnREb21h
aW5fQXNzZW1ibHlSZXNvbHZlAERvY3VtZW50Rm9ybWF0Lk9wZW5YbWwuUGFja2FnaW5nAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATG9nAFBhdGgAZ2V0X1dvcmtib29rAHNldF9X
b3JrYm9vawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAU1RfOTc0NWUwYzZkMjVlNDM1ODg4ZTk1MDJhMmY0OTliYjEuZGxsAENlbGwARG9jdW1l
bnRGb3JtYXQuT3BlblhtbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNj
cmlwdE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAERhdGFDb2x1bW4AU3lzdGVtLkNv
bmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YUNv
bHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rp
b24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBJRGF0YVJlYWRlcgBT
cWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAc2VuZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAUmVz
b2x2ZUV2ZW50SGFuZGxlcgBPcGVuWG1sUGFydENvbnRhaW5lcgBJRW51bWVyYXRvcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzk3NDVlMGM2ZDI1ZTQzNTg4OGU5NTAy
YTJmNDk5YmIxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
VF85NzQ1ZTBjNmQyNWU0MzU4ODhlOTUwMmEyZjQ5OWJiMS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJs
ZXMAUmVhZEFsbEJ5dGVzAENlbGxWYWx1ZXMAU2V0dGluZ3MAUmVzb2x2ZUV2ZW50QXJncwBhcmdz
AGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2hlZXRzAFNj
cmlwdFJlc3VsdHMAZ2V0X1Jvd3MAQ29uY2F0AE9iamVjdABTaGVldABEb2N1bWVudEZvcm1hdC5P
cGVuWG1sLlNwcmVhZHNoZWV0AHNldF9Xb3Jrc2hlZXQAb3BfSW1wbGljaXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AE9wZW5YbWxFbGVtZW50AE9wZW5Y
bWxQYXJ0Um9vdEVsZW1lbnQAU3ByZWFkc2hlZXREb2N1bWVudABnZXRfQ3VycmVudABHZXRJZE9m
UGFydABBZGRXb3JrYm9va1BhcnQAT3BlblhtbFBhcnQAV29ya3NoZWV0UGFydABBZGROZXdQYXJ0
AE1vdmVOZXh0AERhdGFSb3cAZ2V0X0Fzc2VtYmx5AExvYWRBc3NlbWJseQBhc3NlbWJseQAAAEtF
AHgAaQB0AGkAbgBnACAAQwB1AHIAcgBlAG4AdABEAG8AbQBhAGkAbgBfAEEAcwBzAGUAbQBiAGwA
eQBSAGUAcwBvAGwAdgBlAAAjJABQAHIAbwBqAGUAYwB0ADoAOgBEAGwAbABQAGEAdABoAAAjJABQ
AHIAbwBqAGUAYwB0ADoAOgBEAGwAbABOAGEAbQBlAAApJABQAHIAbwBqAGUAYwB0ADoAOgBGAG8A
bABkAGUAcgBQAGEAdABoAAAlJABQAHIAbwBqAGUAYwB0ADoAOgBGAGkAbABlAE4AYQBtAGUAACUk
AFAAcgBvAGoAZQBjAHQAOgA6AFAAcgBvAGMATgBhAG0AZQAANSQAUAByAG8AagBlAGMAdAA6ADoA
QwBvAG4AbgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAADVMAaABlAGUAdAAxAABxUwBUAF8AOQA3
ADQANQBlADAAYwA2AGQAMgA1AGUANAAzADUAOAA4ADgAZQA5ADUAMAAyAGEAMgBmADQAOQA5AGIA
YgAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABhawt8rsF8
TrmzkwkzGTQcAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAnQUAABKArQUgAgEcGAYgAQESgLEG
BwISPRJJBSAAEoC1AyAADgcgAwEOCB0FAwcBDgUgABKAvQYgARKAwRwDIAAcBQACDg4OBQABHQUO
BgABEj0dBTUHFw4ODhJNElESVRJZFRJdAQ4SYRJlEmkSbRJxEnUSeRJ9FRGAgQEODhKAhRKAiRJx
DhKAhQgAAhJNDhGA0QYgAgEOElEGIAEBEYDdBSAAEoDhBiABARKA5QUVEl0BDgUgABKA6QQgABJ1
BSABARMAAyAAAgQgABJhBiABARKA8QUwAQAeAAQKARJlByABAR0SgPkGIAEBEoD9BSAAEoDxBzAB
AR4AHgAFCgESgQEGIAEOEoEFBgABEoEJDgYgAQESgQkGAAESgQ0JBiABARKBDQkgABURgIEBEwAG
FRGAgQEOBCAAEwAIFRKBEQERgRULAAEVEoERARMAEwALIAEBFRKBEQERgRUGIAEBEoEdBQoBEoCF
BAoBEnEFIAASgSEEIAEcDggAARKBKRGBLQQgABI9BiACAQ4SPQi3elxWGTTgiQiJhF3NgIDMkQiP
sGy2TQGaFwQAAAAABAEAAAAEBhKAlQQGEoCZAwYSEAIGCAMGERQHIAISPRwSRQggAhI9EkUSPQUA
ABKAlQUAABKAmQYAAQESgJkEAAASEAMAAAEFCAASgJUFCAASgJkECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOTc0NWUwYzZkMjVlNDM1
ODg4ZTk1MDJhMmY0OTliYjEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1l
d29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAaDsAAAAAAAAAAAAAgjsAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAHQ7AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQCMlRMeAAABAIyVEx4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADkANwA0ADUAZQAwAGMANgBkADIANQBlADQAMwA1ADgAOAA4AGUAOQA1ADAAMgBhADIAZgA0
ADkAOQBiAGIAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADYA
OQA5AC4AMwA4ADIAOAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkANwA0ADUAZQAwAGMANgBkADIANQBlADQAMwA1ADgAOAA4AGUAOQA1ADAAMgBhADIAZgA0ADkA
OQBiAGIAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOQA3ADQANQBlADAAYwA2AGQAMgA1AGUANAAzADUAOAA4ADgAZQA5ADUAMAAyAGEA
MgBmADQAOQA5AGIAYgAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADkANwA0ADUAZQAwAGMANgBkADIANQBlADQAMwA1ADgAOAA4AGUAOQA1ADAAMgBhADIA
ZgA0ADkAOQBiAGIAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANwA2ADkAOQAuADMAOAAyADgANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANwA2ADkAOQAuADMAOAAyADgANAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACUOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="80"
            Column="24" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="239,80" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>